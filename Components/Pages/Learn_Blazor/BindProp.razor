@page "/LearnBlazer/BindProp"

<div class="row">
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Playground</h3>
        <hr />
        Is Active :
        <input type="checkbox" @bind-value="@Product.IsActive" checked="@(Product.IsActive ? "checked" : null)" />
        <br />
        Input Price :
        <input type="number" @bind="@Product.Price" @bind:event="oninput" />
        <br />
        <br />
        Product Properties:
        <select @bind="selectedProp">
            @foreach (var item in Product.ProductProperties)
            {
                <option value="@item.Key">@item.Key</option>
            }
        </select>
    </div>

    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Summary</h3>
        <hr />
        Name : @Product.Name
        <br />
        IsActive : @Product.IsActive
        <br />
        Price : @Product.Price
        <br />
        This Product is : @(Product.IsActive ? "Actvie" : "InActive")
        <br />
        <br />
        Selected Prop : @selectedProp
        <br />
        @if (!string.IsNullOrEmpty(selectedProp))
        {
            <p>Selected Value : @Product.ProductProperties.FirstOrDefault(x => x.Key == selectedProp).Value</p>
        }
    </div>

    <div class="col-12 p-4">
        <h2 class="text-success">Product Table</h2>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Product Name</th>
                    <th>Price</th>
                    <th>Is Active</th>
                </tr>
                
            </thead>
            <tbody>
                @foreach (var item in ProductList)
                {
                    <tr>
                        <td><input type="text" @bind = "item.Name" @bind:event="oninput"/></td>
                        <td><input type="text" @bind = "item.Price" @bind:event="oninput"/></td>
                        <td><input type="checkbox" @bind = "item.IsActive" /></td>
                    </tr>
                }
            </tbody>
        </table>
        <br/>
        <h2>Product Summary</h2>
        @foreach (var item in ProductList)
        {
            <p>@item.Name [@item.Price] is @(item.IsActive?"Active":"InActive")</p>
        }
    </div>

   
 

</div>


@code {
    private string selectedProp = "";
    Product Product = new()
    {
        Id = 1,
        Name = "Product 1",
        Price = 5,
        IsActive = true,
        ProductProperties = new List<Models.Product_Prop>()
        {
            new Product_Prop{Id=1,Key="Color",Value="Red"},
            new Product_Prop{Id=2,Key="Size",Value="20oz"},
            new Product_Prop{Id=3,Key="Flavor",Value="Rose"},
        }
    };

    List<Product> ProductList = new();

    protected override void OnInitialized()
    {
        ProductList.Add(new()
        {
            Id = 1,
            Name = "Midnight Blaze",
            IsActive = false,
            Price = 5.99,
            ProductProperties = new List<Product_Prop>()
            {
                new Product_Prop {Id=1,Key="Flavor",Value="Rose"},
                new Product_Prop {Id=2,Key="Size",Value="20oz"},
                new Product_Prop {Id=3,Key="Color",Value="Purple"},
            }
        });

        ProductList.Add(new()
        {
            Id = 2,
            Name = "Blossom Lily",
            IsActive = true,
            Price = 10.59,
            ProductProperties = new List<Product_Prop>()
            {
                new Product_Prop {Id=1,Key="Flavor",Value="Lily"},
                new Product_Prop {Id=2,Key="Size",Value="18oz"},
                new Product_Prop {Id=3,Key="Color",Value="White"},
            }
        });
    }

}
