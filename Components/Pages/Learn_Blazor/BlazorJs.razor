@page "/blazorjs"

@inject IJSRuntime _JSRuntime

<h3>BlazorJs</h3>

<div class="row">
    <button class="btn btn-secondary" @onclick="TestConfirmBox">Test Confrim Button</button>
</div>
<div class="row">
    @if (ConfirmResult)
    {
        <p>Confirmation has been made.</p>
    }
    else
    {
        <p>Pending Confirmation</p>
    }
</div>

<div class="row">
    <button class="btn btn-success" style="width:100px"  @onclick="ToastrSuccess">Toastr Success</button>
    <button class="btn btn-danger" style="width:100px" @onclick="ToastrError">Toastr Failure</button>
</div>

<div class="row">
    <button class="btn btn-success" style="width:100px" @onclick="SweetalertSuccess">SweetalertSuccess Success</button>
    <button class="btn btn-danger" style="width:100px" @onclick="SweetalertError">SweetalertError Failure</button>
</div>
@code {

    private string ConfirmMessage = "Are you sure you want to click here?";
    private bool ConfirmResult{ get; set; }

    private async Task TestConfirmBox()
    {
        ConfirmResult = await _JSRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
    }

    private async Task ToastrSuccess()
    {
        // await _jSRuntime.InvokeVoidAsync("showToastr","success","Success Notification");
        await _JSRuntime.ToastrSuccess("Success Notification");
    }

    private async Task ToastrError()
    {
        // await _jSRuntime.InvokeVoidAsync("showToastr", "error", "Error Notification");
        await _JSRuntime.ToastrError("Error Notification");

    }

    private async Task SweetalertSuccess()
    {
        await _JSRuntime.InvokeVoidAsync("ShowSwal", "success", "Task Complted");
    }
    private async Task SweetalertError()
    {
        await _JSRuntime.InvokeVoidAsync("ShowSwal", "error", "Task Failed");
    }
}
